package com.evocon.partnertracking.domain;

import static com.evocon.partnertracking.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class LicenseAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLicenseAllPropertiesEquals(License expected, License actual) {
        assertLicenseAutoGeneratedPropertiesEquals(expected, actual);
        assertLicenseAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLicenseAllUpdatablePropertiesEquals(License expected, License actual) {
        assertLicenseUpdatableFieldsEquals(expected, actual);
        assertLicenseUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLicenseAutoGeneratedPropertiesEquals(License expected, License actual) {
        assertThat(actual)
            .as("Verify License auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLicenseUpdatableFieldsEquals(License expected, License actual) {
        assertThat(actual)
            .as("Verify License relevant properties")
            .satisfies(a -> assertThat(a.getLicenseId()).as("check licenseId").isEqualTo(expected.getLicenseId()))
            .satisfies(a -> assertThat(a.getLicenseRuleName()).as("check licenseRuleName").isEqualTo(expected.getLicenseRuleName()))
            .satisfies(a -> assertThat(a.getLicenseStartDate()).as("check licenseStartDate").isEqualTo(expected.getLicenseStartDate()))
            .satisfies(a -> assertThat(a.getLicenseEndDate()).as("check licenseEndDate").isEqualTo(expected.getLicenseEndDate()))
            .satisfies(a -> assertThat(a.getLicenseQuantity()).as("check licenseQuantity").isEqualTo(expected.getLicenseQuantity()))
            .satisfies(a ->
                assertThat(a.getPricePerLicense())
                    .as("check pricePerLicense")
                    .usingComparator(bigDecimalCompareTo)
                    .isEqualTo(expected.getPricePerLicense())
            )
            .satisfies(a -> assertThat(a.getClientId()).as("check clientId").isEqualTo(expected.getClientId()))
            .satisfies(a -> assertThat(a.getPartnerId()).as("check partnerId").isEqualTo(expected.getPartnerId()))
            .satisfies(a ->
                assertThat(a.getCommissionRuleSetId()).as("check commissionRuleSetId").isEqualTo(expected.getCommissionRuleSetId())
            )
            .satisfies(a ->
                assertThat(a.getTotalLicenseAmount())
                    .as("check totalLicenseAmount")
                    .usingComparator(bigDecimalCompareTo)
                    .isEqualTo(expected.getTotalLicenseAmount())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLicenseUpdatableRelationshipsEquals(License expected, License actual) {
        assertThat(actual)
            .as("Verify License relationships")
            .satisfies(a -> assertThat(a.getClient()).as("check client").isEqualTo(expected.getClient()))
            .satisfies(a -> assertThat(a.getPartner()).as("check partner").isEqualTo(expected.getPartner()))
            .satisfies(a -> assertThat(a.getCommissionRuleSet()).as("check commissionRuleSet").isEqualTo(expected.getCommissionRuleSet()));
    }
}
